# -*- coding: utf-8 -*-
import datetime

import flet as ft
from loguru import logger

from docs.app import run_quart
from system.account_actions.TGAccountBIO import AccountBIO
from system.account_actions.TGChek import TGChek
from system.account_actions.TGConnect import TGConnect
from system.account_actions.TGContact import TGContact
from system.account_actions.TGCreating import CreatingGroupsAndChats
from system.account_actions.TGInviting import InvitingToAGroup
from system.account_actions.TGInvitingScheduler import (launching_an_invite_once_an_hour,
                                                        launching_invite_every_day_certain_time, schedule_invite)
from system.account_actions.TGLimits import SettingLimits
from system.account_actions.TGParsing import ParsingGroupMembers
from system.account_actions.TGReactions import WorkingWithReactions
from system.account_actions.TGSendingMessages import SendTelegramMessages
from system.account_actions.TGSubUnsub import SubscribeUnsubscribeTelegram
from system.auxiliary_functions.auxiliary_functions import find_files, find_filess
from system.auxiliary_functions.config import (ConfigReader, height_button, small_button_width, line_width_button,
                                               program_name, program_version, date_of_program_change, window_width,
                                               window_height, window_resizable, path_parsing_folder,
                                               path_inviting_folder, path_subscription_folder, path_unsubscribe_folder,
                                               path_reactions_folder, path_contact_folder, path_creating_folder,
                                               path_send_message_folder, path_bio_folder)
from system.logging_in.logging_in import loging
from system.menu_gui.menu_gui import (inviting_menu, working_with_contacts_menu, message_distribution_menu,
                                      bio_editing_menu, settings_menu, menu_parsing, reactions_menu,
                                      subscribe_and_unsubscribe_menu, account_verification_menu,
                                      account_connection_menu, connecting_accounts_by_number_menu,
                                      connecting_accounts_by_session_menu)
from system.receiving_and_recording.receiving_and_recording import ReceivingAndRecording
from system.setting.setting import SettingPage, get_unique_filename, reaction_gui
from system.sqlite_working_tools.sqlite_working_tools import DatabaseHandler

logger.add("user_settings/log/log.log", rotation="2 MB", compression="zip")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã


async def show_notification(page: ft.Page, message: str):
    dlg = ft.AlertDialog(
        title=ft.Text(message),
        on_dismiss=lambda e: page.go("/"),  # –ü–µ—Ä–µ—Ö–æ–¥ –æ–±—Ä–∞—Ç–Ω–æ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
    )
    page.overlay.append(dlg)
    dlg.open = True
    page.update()


def main(page: ft.Page):
    page.title = f"{program_name}: {program_version} (–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è {date_of_program_change})"
    page.window.width = window_width  # –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞
    page.window.height = window_height  # –í—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞
    page.window.resizable = window_resizable  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    logger.info(f"Program version: {program_version}. Date of change: {date_of_program_change}")



    async def route_change(route):

        await loging()

        page.views.clear()
        # –ú–µ–Ω—é "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        page.views.append(
            ft.View("/", [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                    bgcolor=ft.colors.SURFACE_VARIANT),
                          ft.Text(spans=[ft.TextSpan(
                              f"{program_name}",
                              ft.TextStyle(
                                  size=40,
                                  weight=ft.FontWeight.BOLD,
                                  foreground=ft.Paint(
                                      gradient=ft.PaintLinearGradient((0, 20), (150, 20), [ft.colors.PINK,
                                                                                           ft.colors.PURPLE])), ), ), ], ),
                          ft.Text(disabled=False,
                                  spans=[ft.TextSpan('–ê–∫–∫–∞—É–Ω—Ç  Telegram: '),
                                         ft.TextSpan("https://t.me/PyAdminRU",
                                                     ft.TextStyle(decoration=ft.TextDecoration.UNDERLINE),
                                                     url="https://t.me/PyAdminRU", ), ], ),
                          ft.Text(disabled=False,
                                  spans=[ft.TextSpan("–ö–∞–Ω–∞–ª Telegram: "),
                                         ft.TextSpan("https://t.me/master_tg_d",
                                                     ft.TextStyle(decoration=ft.TextDecoration.UNDERLINE),
                                                     url="https://t.me/master_tg_d", ), ], ),
                          ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                              ft.Row(
                                  [ft.ElevatedButton(width=small_button_width, height=height_button, text="üöÄ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥",
                                                     on_click=lambda _: page.go("/inviting")),
                                   ft.ElevatedButton(width=small_button_width, height=height_button, text="üìä –ü–∞—Ä—Å–∏–Ω–≥",
                                                     on_click=lambda _: page.go("/parsing")), ]),
                              ft.Row([ft.ElevatedButton(width=small_button_width, height=height_button,
                                                        text="üìá –†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏",
                                                        on_click=lambda _: page.go("/working_with_contacts")),
                                      ft.ElevatedButton(width=small_button_width, height=height_button,
                                                        text="üîÑ –ü–æ–¥–ø–∏—Å–∫–∞, –æ—Ç–ø–∏—Å–∫–∞",
                                                        on_click=lambda _: page.go("/subscribe_unsubscribe")), ]),
                              ft.Row([ft.ElevatedButton(width=small_button_width, height=height_button,
                                                        text="üîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
                                                        on_click=lambda _: page.go("/account_connection_menu")),
                                      ft.ElevatedButton(width=small_button_width, height=height_button,
                                                        text="üì§ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π",
                                                        on_click=lambda _: page.go("/sending_messages")), ]),
                              ft.Row([ft.ElevatedButton(width=small_button_width, height=height_button,
                                                        text="‚ù§Ô∏è –†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏",
                                                        on_click=lambda _: page.go("/working_with_reactions")),
                                      ft.ElevatedButton(width=small_button_width, height=height_button,
                                                        text="üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
                                                        on_click=lambda _: page.go("/account_verification_menu")), ]),
                              ft.Row([ft.ElevatedButton(width=small_button_width, height=height_button,
                                                        text="üë• –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)",
                                                        on_click=lambda _: page.go("/creating_groups")),
                                      ft.ElevatedButton(width=small_button_width, height=height_button,
                                                        text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_BIO",
                                                        on_click=lambda _: page.go("/bio_editing")), ]),
                              ft.ElevatedButton(width=line_width_button, height=height_button, text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                                                on_click=lambda _: page.go("/settings")),
                              ft.ElevatedButton(width=line_width_button, height=height_button, text="üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
                                                on_click=lambda _: page.go("/documentation")),
                          ]), ]))
        # ______________________________________________________________________________________________________________
        if page.route == "/inviting":  # –ú–µ–Ω—é "–ò–Ω–≤–∞–π—Ç–∏–Ω–≥"
            await inviting_menu(page)
        elif page.route == "/inviting_without_limits":  # –ò–Ω–≤–∞–π—Ç–∏–Ω–≥
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_inviting_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ inviting')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ inviting")
                    return None
                if len(await SettingLimits().get_usernames_with_limits(table_name="members",
                                                                       account_limits=ConfigReader().get_limits())) == 0:
                    logger.error('‚õî –í —Ç–∞–±–ª–∏—Ü–µ members –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞')
                    await show_notification(page, "‚õî –í —Ç–∞–±–ª–∏—Ü–µ members –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    await InvitingToAGroup().inviting_without_limits(account_limits=ConfigReader().get_limits())
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/inviting_1_time_per_hour":  # –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ 1 —Ä–∞–∑ –≤ —á–∞—Å
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_inviting_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ inviting')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ inviting")
                    return None
                if len(await SettingLimits().get_usernames_with_limits(table_name="members",
                                                                       account_limits=ConfigReader().get_limits())) == 0:
                    logger.error('‚õî –í —Ç–∞–±–ª–∏—Ü–µ members –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞')
                    await show_notification(page, "‚õî –í —Ç–∞–±–ª–∏—Ü–µ members –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    launching_an_invite_once_an_hour()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/inviting_certain_time":  # –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_inviting_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ inviting')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ inviting")
                    return None
                if len(await SettingLimits().get_usernames_with_limits(table_name="members",
                                                                       account_limits=ConfigReader().get_limits())) == 0:
                    logger.error('‚õî –í —Ç–∞–±–ª–∏—Ü–µ members –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞')
                    await show_notification(page, "‚õî –í —Ç–∞–±–ª–∏—Ü–µ members –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    schedule_invite()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/inviting_every_day":  # –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_inviting_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ inviting')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ inviting")
                    return None
                if len(await SettingLimits().get_usernames_with_limits(table_name="members",
                                                                       account_limits=ConfigReader().get_limits())) == 0:
                    logger.error('‚õî –í —Ç–∞–±–ª–∏—Ü–µ members –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞')
                    await show_notification(page, "‚õî –í —Ç–∞–±–ª–∏—Ü–µ members –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    launching_invite_every_day_certain_time()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–Ω–≤–∞–π—Ç–∏–Ω–≥–∞")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        # ______________________________________________________________________________________________________________
        elif page.route == "/account_verification_menu":  # –ú–µ–Ω—é "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"
            await account_verification_menu(page)
        elif page.route == "/validation_check":  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
            await TGChek().validation_check()
        elif page.route == "/checking_for_spam_bots":  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ —Å–ø–∞–º –±–æ—Ç
            await TGChek().checking_for_spam_bots()
        elif page.route == "/renaming_accounts":  # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            await TGChek().renaming_accounts()
        elif page.route == "/full_verification":  # –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            await TGChek().full_verification()
        # ______________________________________________________________________________________________________________
        elif page.route == "/subscribe_unsubscribe":  # –ú–µ–Ω—é "–ü–æ–¥–ø–∏—Å–∫–∞ –∏ –æ—Ç–ø–∏—Å–∫–∞"
            await subscribe_and_unsubscribe_menu(page)
        elif page.route == "/subscription_all":  # –ü–æ–¥–ø–∏—Å–∫–∞
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_subscription_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ subscription')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ subscription")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü–æ–¥–ø–∏—Å–∫–∏")
                    await SubscribeUnsubscribeTelegram().subscribe_telegram()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ü–æ–¥–ø–∏—Å–∫–∏")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/unsubscribe_all":  # –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_unsubscribe_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ unsubscribe')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ unsubscribe")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –û—Ç–ø–∏—Å–∫–∞")
                    await SubscribeUnsubscribeTelegram().unsubscribe_all()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –û—Ç–ø–∏—Å–∫–∏")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        # ______________________________________________________________________________________________________________
        elif page.route == "/working_with_reactions":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏"
            await reactions_menu(page)
        elif page.route == "/setting_reactions":  # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_reactions_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ reactions')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ reactions")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
                    await WorkingWithReactions().send_reaction_request(page)
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/we_are_winding_up_post_views":  # –ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–æ–≤
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_reactions_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ reactions')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ reactions")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ù–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤")
                    await WorkingWithReactions().viewing_posts()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ù–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/automatic_setting_of_reactions":  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_reactions_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ reactions')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ reactions")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
                    await WorkingWithReactions().setting_reactions()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        # ______________________________________________________________________________________________________________
        elif page.route == "/parsing":  # –ú–µ–Ω—é "–ü–∞—Ä—Å–∏–Ω–≥"
            await menu_parsing(page)
        elif page.route == "/parsing_single_groups":
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_parsing_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    await ParsingGroupMembers().parse_groups()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")




        elif page.route == "/parsing_selected_group_user_subscribed":  # –ü–∞—Ä—Å–∏–Ω–≥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_parsing_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    await ParsingGroupMembers().choose_and_parse_group(page)
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")




        elif page.route == "/parsing_active_group_members":  # –ü–∞—Ä—Å–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_parsing_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    await ParsingGroupMembers().entering_data_for_parsing_active(page)
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")



        elif page.route == "/parsing_groups_channels_account_subscribed":  # –ü–∞—Ä—Å–∏–Ω–≥ –≥—Ä—É–ø–ø / –∫–∞–Ω–∞–ª–æ–≤ –∞–∫–∫–∞—É–Ω—Ç–∞
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_parsing_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    await ParsingGroupMembers().parse_subscribed_groups()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")



        elif page.route == "/clearing_list_previously_saved_data":  # –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞–Ω–µ–µ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            await DatabaseHandler().cleaning_db("members")


        elif page.route == "/importing_a_list_of_parsed_data":  # üìã –ò–º–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞–Ω–µ–µ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            await ReceivingAndRecording().write_data_to_excel(file_name="user_settings/parsed_chat_participants.xlsx")
        # ______________________________________________________________________________________________________________
        elif page.route == "/working_with_contacts":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"
            await working_with_contacts_menu(page)
        elif page.route == "/creating_contact_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_contact_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ contact')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ contact")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                    await DatabaseHandler().open_and_read_data("contact")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
                    SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤", "contact",
                                                         "contact", "/working_with_contacts", "contact")
                    logger.info("üîö –ö–æ–Ω–µ—Ü –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/show_list_contacts":  # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_contact_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ contact')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ contact")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                    await TGContact().show_account_contact_list()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ü–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/deleting_contacts":  # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_contact_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ contact')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ contact")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –£–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                    await TGContact().delete_contact()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –£–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/adding_contacts":  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_contact_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ contact')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ contact")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                    await TGContact().inviting_contact()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        # ______________________________________________________________________________________________________________
        elif page.route == "/account_connection_menu":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ '–º–µ–Ω—é'.
            await account_connection_menu(page)
        # _______________________________________________________________________________________________________________
        elif page.route == "/connecting_accounts_by_number":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ '–ú–µ–Ω—é'
            await connecting_accounts_by_number_menu(page)
        elif page.route == "/account_connection_number_answering_machine":  # –î–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
            await TGConnect().connecting_number_accounts(page, 'answering_machine', '–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞')
        elif page.route == "/account_connection_number_bio":  # –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BIO
            await TGConnect().connecting_number_accounts(page, 'bio', '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BIO')
        elif page.route == "/account_connection_number_contact":  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏
            await TGConnect().connecting_number_accounts(page, 'contact', '—Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏')
        elif page.route == "/account_connection_number_creating":  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø
            await TGConnect().connecting_number_accounts(page, 'creating', '—Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø')
        elif page.route == "/account_connection_number_inviting":  # –î–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
            await TGConnect().connecting_number_accounts(page, 'inviting', '–∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞')
        elif page.route == "/account_connection_number_parsing":  # –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
            await TGConnect().connecting_number_accounts(page, 'parsing', '–ø–∞—Ä—Å–∏–Ω–≥–∞')
        elif page.route == "/account_connection_number_reactions":  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏
            await TGConnect().connecting_number_accounts(page, 'reactions', '—Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏')
        elif page.route == "/account_connection_number_reactions_list":  # –î–ª—è –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
            await TGConnect().connecting_number_accounts(page, 'reactions_list', '–ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π')
        elif page.route == "/account_connection_number_send_message":  # –î–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
            await TGConnect().connecting_number_accounts(page, 'send_message', '—Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π')
        elif page.route == "/account_connection_number_subscription":  # –î–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
            await TGConnect().connecting_number_accounts(page, 'subscription', '–ø–æ–¥–ø–∏—Å–∫–∏')
        elif page.route == "/account_connection_number_unsubscribe":  # –î–ª—è –æ—Ç–ø–∏—Å–∫–∏
            await TGConnect().connecting_number_accounts(page, 'unsubscribe', '–æ—Ç–ø–∏—Å–∫–∏')
        elif page.route == "/account_connection_number_viewing":  # –î–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
            await TGConnect().connecting_number_accounts(page, 'viewing', '–Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤')
        # _______________________________________________________________________________________________________________
        elif page.route == "/connecting_accounts_by_session":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ session –∞–∫–∫–∞—É–Ω—Ç–æ–≤ '–ú–µ–Ω—é'
            await connecting_accounts_by_session_menu(page)
        elif page.route == "/account_connection_session_answering_machine":  # –î–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞ (session)
            await TGConnect().connecting_session_accounts(page, 'answering_machine', '–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞')
        elif page.route == "/account_connection_session_bio":  # –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BIO (session)
            await TGConnect().connecting_session_accounts(page, 'bio', '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BIO')
        elif page.route == "/account_connection_session_contact":  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏ (session)
            await TGConnect().connecting_session_accounts(page, 'contact', '—Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏')
        elif page.route == "/account_connection_session_creating":  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø (session)
            await TGConnect().connecting_session_accounts(page, 'creating', '—Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø')
        elif page.route == "/account_connection_session_inviting":  # –î–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞ (session)
            await TGConnect().connecting_session_accounts(page, 'inviting', '–∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞')
        elif page.route == "/account_connection_session_parsing":  # –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ (session)
            await TGConnect().connecting_session_accounts(page, 'parsing', '–ø–∞—Ä—Å–∏–Ω–≥–∞')
        elif page.route == "/account_connection_session_reactions":  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏ (session)
            await TGConnect().connecting_session_accounts(page, 'reactions', '—Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏')
        elif page.route == "/account_connection_session_reactions_list":  # –î–ª—è –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π (session)
            await TGConnect().connecting_session_accounts(page, 'reactions_list', '–ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π')
        elif page.route == "/account_connection_session_send_message":  # –î–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (session)
            await TGConnect().connecting_session_accounts(page, 'send_message', '—Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π')
        elif page.route == "/account_connection_session_subscription":  # –î–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ (session)
            await TGConnect().connecting_session_accounts(page, 'subscription', '–ø–æ–¥–ø–∏—Å–∫–∏')
        elif page.route == "/account_connection_session_unsubscribe":  # –î–ª—è –æ—Ç–ø–∏—Å–∫–∏ (session)
            await TGConnect().connecting_session_accounts(page, 'unsubscribe', '–æ—Ç–ø–∏—Å–∫–∏')
        elif page.route == "/account_connection_session_viewing":  # –î–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ (session)
            await TGConnect().connecting_session_accounts(page, 'viewing', '–Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤')
        # _______________________________________________________________________________________________________________
        elif page.route == "/creating_groups":  # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_creating_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ creating')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ creating")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –°–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)")
                    await CreatingGroupsAndChats().creating_groups_and_chats()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –°–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        # _______________________________________________________________________________________________________________
        elif page.route == "/sending_messages":  # –ú–µ–Ω—é "–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"
            await message_distribution_menu(page)
        elif page.route == "/sending_messages_via_chats":  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_send_message_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ send_message")
                    return None
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
                if not find_filess(directory_path="user_settings/message", extension='json'):
                    logger.error('‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ message')
                    await show_notification(page, "‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ message")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –†–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º")
                    entities = find_files(directory_path="user_settings/message", extension="json")
                    logger.info(entities)
                    await SendTelegramMessages().sending_messages_via_chats_times()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –†–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/sending_messages_via_chats_with_answering_machine":  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º —Å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–æ–º
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_send_message_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ send_message")
                    return None
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
                if not find_filess(directory_path="user_settings/message", extension='json'):
                    logger.error('‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ message')
                    await show_notification(page, "‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ message")
                    return None
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞")
                if not find_filess(directory_path="user_settings/answering_machine", extension='json'):
                    logger.error('‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞ –≤ –ø–∞–ø–∫–µ answering_machine')
                    await show_notification(page,
                                            "‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞ –≤ –ø–∞–ø–∫–µ answering_machine")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –†–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º —Å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–æ–º")
                    await SendTelegramMessages().answering_machine()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –†–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º —Å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–æ–º")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/sending_files_via_chats":  # –†–∞—Å—Å—ã–ª–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_send_message_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ send_message")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –†–∞—Å—Å—ã–ª–∫–∏ —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º")
                    await SendTelegramMessages().sending_files_via_chats()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –†–∞—Å—Å—ã–ª–∫–∏ —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/sending_messages_files_via_chats":  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π + —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_send_message_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ send_message")
                    return None
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
                if not find_filess(directory_path="user_settings/message", extension='json'):
                    logger.error('‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ message')
                    await show_notification(page, "‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ message")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π + —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º")
                    await SendTelegramMessages().sending_messages_files_via_chats()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π + —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/sending_personal_messages_with_limits":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É (—Å –ª–∏–º–∏—Ç–∞–º–∏)
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_send_message_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ send_message")
                    return None

                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
                if not find_filess(directory_path="user_settings/message", extension='json'):
                    logger.error('‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ message')
                    await show_notification(page, "‚õî –ù–µ—Ç –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ message")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É")
                    await SendTelegramMessages().send_message_from_all_accounts(
                        account_limits=ConfigReader().get_limits())
                    logger.info("üîö –ö–æ–Ω–µ—Ü –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/sending_files_to_personal_account_with_limits":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ª–∏—á–∫—É (—Å –ª–∏–º–∏—Ç–∞–º–∏)
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_send_message_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ send_message")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ –ª–∏—á–∫—É")
                    await SendTelegramMessages().send_files_to_personal_chats(
                        account_limits=ConfigReader().get_limits())
                    logger.info("üîö –ö–æ–Ω–µ—Ü –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ –ª–∏—á–∫—É")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        # ______________________________________________________________________________________________________________
        elif page.route == "/bio_editing":  # –ú–µ–Ω—é "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_BIO"
            await bio_editing_menu(page)
        elif page.route == "/edit_description":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_bio_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ bio")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è")
                    await AccountBIO().change_bio_profile_gui(page)
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/name_change":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_bio_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ bio")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏")
                    await AccountBIO().change_name_profile_gui(page)
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/change_surname":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_bio_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ bio")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–º–∏–ª–∏–∏")
                    await AccountBIO().change_last_name_profile_gui(page)
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–º–∏–ª–∏–∏")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/edit_photo":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_bio_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ bio")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ")
                    await AccountBIO().change_photo_profile()
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        elif page.route == "/changing_username":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ username
            try:
                logger.info("‚õî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
                if not find_filess(directory_path=path_bio_folder, extension='session'):
                    logger.error('‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ parsing')
                    await show_notification(page, "‚õî –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ bio")
                    return None
                else:
                    start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                    logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ò–∑–º–µ–Ω–µ–Ω–∏—è username")
                    await AccountBIO().change_username_profile_gui(page)
                    logger.info("üîö –ö–æ–Ω–µ—Ü –ò–∑–º–µ–Ω–µ–Ω–∏—è username")
                    finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                    logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                    logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞: {e}")
        # ______________________________________________________________________________________________________________
        elif page.route == "/settings":  # –ú–µ–Ω—é "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ TelegramMaster"
            await settings_menu(page)
        elif page.route == "/recording_api_id_api_hash":  # –ó–∞–ø–∏—Å—å api_id, api_hash
            await SettingPage().writing_api_id_api_hash(page)
        elif page.route == "/message_limits":  # –õ–∏–º–∏—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            SettingPage().record_setting(page, "message_limits", "–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è")
        elif page.route == "/account_limits":  # –õ–∏–º–∏—Ç—ã –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
            SettingPage().record_setting(page, "account_limits", "–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç")
        elif page.route == "/creating_username_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ username
            SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ username", "members",
                                                 "username, id, access_hash, first_name, last_name, "
                                                 "user_phone, online_at, photos_id, user_premium",
                                                 "/settings", "members (username)")
        elif page.route == "/forming_list_of_chats_channels":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ / –∫–∞–Ω–∞–ª–æ–≤
            SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≥—Ä—É–ø–ø—ã", "writing_group_links",
                                                 "writing_group_links", "/settings", "writing_group_links")
        elif page.route == "/link_entry":  # –ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
            await DatabaseHandler().cleaning_db("links_inviting")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –≥—Ä—É–ø–ø–∞–º–∏
            SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞", "links_inviting",
                                                 "links_inviting", "/settings", "links_inviting")
        elif page.route == "/proxy_entry":  # –ó–∞–ø–∏—Å—å proxy
            await SettingPage().creating_the_main_window_for_proxy_data_entry(page)
        elif page.route == "/message_recording":  # –ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π
            SettingPage().recording_text_for_sending_messages(page, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è",
                                                              get_unique_filename(
                                                                  base_filename='user_settings/message/message'))
        elif page.route == "/recording_reaction_link":  # –ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            SettingPage().recording_text_for_sending_messages(page, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è",
                                                              'user_settings/reactions/link_channel.json')
        elif page.route == "/choice_of_reactions":  # –í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–π
            await reaction_gui(page)
        elif page.route == "/recording_the_time_between_messages":  # –ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
            SettingPage().create_main_window(page, variable="time_sending_messages")
        elif page.route == "/time_between_invites_sending_messages":  # –í—Ä–µ–º—è –º–µ–∂–¥—É –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–æ–º, —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            SettingPage().create_main_window(page, variable="time_inviting")
        elif page.route == "/changing_accounts":  # –°–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            SettingPage().create_main_window(page, variable="time_changing_accounts")
        elif page.route == "/time_between_subscriptions":
            await SettingPage().recording_the_time_to_launch_an_invite_every_day(page)
        elif page.route == "/time_between_subscriptionss":  # –í—Ä–µ–º—è –º–µ–∂–¥—É –ø–æ–¥–ø–∏—Å–∫–æ–π
            SettingPage().create_main_window(page, variable="time_subscription")
        elif page.route == "/documentation":  # –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
            await run_quart()
        elif page.route == "/errors":
            # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
            page.views.append(ft.View("/errors", []))

        page.update()

    def view_pop(view):
        page.views.pop()
        top_view = page.views[-1]
        page.go(top_view.route)

    page.on_route_change = route_change
    page.on_view_pop = view_pop
    page.go(page.route)


ft.app(target=main)
