# -*- coding: utf-8 -*-
import datetime

import flet as ft  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É flet
from loguru import logger
from telethon import TelegramClient
from telethon import functions
from telethon.errors import (AuthKeyUnregisteredError, UsernamePurchaseAvailableError, UsernameOccupiedError,
                             UsernameInvalidError)

from system.account_actions.TGConnect import TGConnect
from system.auxiliary_functions.auxiliary_functions import find_files, find_filess
from system.auxiliary_functions.config import path_bio_folder
from system.gui.buttons import function_button_ready
from system.gui.menu_gui import log_and_display, show_notification


class AccountBIO:

    def __init__(self):
        self.directory_path = path_bio_folder
        self.extension = 'session'
        self.tg_connect = TGConnect()



    async def change_username_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            user_input = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ username –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ –±–æ–ª–µ–µ 32 —Å–∏–º–≤–æ–ª–æ–≤): ", multiline=True,
                                      max_lines=19)

            async def btn_click(e) -> None:
                await self.change_username_profile(page, user_input.value)
                page.go("/bio_editing")  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
                page.update()

            function_button_ready(page, btn_click, user_input)
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_username_profile(self, page, user_input) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ username –ø—Ä–æ—Ñ–∏–ª—è Telegram

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param user_input  - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            for session_name in find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                telegram_client: TelegramClient = await self.tg_connect.get_telegram_client(page,
                                                                                            session_name=session_name,
                                                                                            account_directory=self.directory_path)
                await telegram_client.connect()
                try:
                    await telegram_client(functions.account.UpdateUsernameRequest(username=user_input))
                    logger.info(f'–ù–∏–∫–Ω–µ–π–º —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {user_input}')
                except AuthKeyUnregisteredError:
                    logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")
                except (UsernamePurchaseAvailableError, UsernameOccupiedError):
                    logger.error("‚ùå –ù–∏–∫–Ω–µ–π–º —É–∂–µ –∑–∞–Ω—è—Ç")
                except UsernameInvalidError:
                    logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º")
                finally:
                    await telegram_client.disconnect()
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_bio_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            user_input = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 70 —Å–∏–º–≤–æ–ª–æ–≤: ", multiline=True,
                                      max_lines=19)

            async def btn_click(e) -> None:
                await self.change_bio_profile(page, user_input.value)
                page.go("/bio_editing")  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
                page.update()

            function_button_ready(page, btn_click, user_input)
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_bio_profile(self, page, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param user_input - –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è Telegram
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """

        start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞ ‚è±Ô∏è
        lv = ft.ListView(expand=10, spacing=1, padding=2, auto_scroll=True)
        page.controls.append(lv)  # –¥–æ–±–∞–≤–ª—è–µ–º ListView –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ–≤ üìù
        page.update()  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑–∞—Ç—å ListView üîÑ

        # –ò–Ω–¥–∏–∫–∞—Ü–∏—è –Ω–∞—á–∞–ª–∞ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
        await log_and_display(f"‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.\nüïí –í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: {str(start)}", lv, page)
        page.update()  # –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üîÑ

        try:
            logger.info(f"–ó–∞–ø—É—Å–∫ —Å–º–µ–Ω—ã  –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")
            for session_name in find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page, session_name,
                                                                   account_directory=self.directory_path)
                await client.connect()
                while True:
                    if len(user_input) <= 70:
                        break
                    else:
                        logger.info(f"‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 70 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞. –û–ø–∏—Å–∞–Ω–∏–µ "
                                    f"–ø—Ä–æ—Ñ–∏–ª—è: {len(user_input)} —Å–∏–º–≤–æ–ª–æ–≤")
                try:
                    result = await client(functions.account.UpdateProfileRequest(about=user_input))
                    logger.info(f'{result}\n–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!')
                    await client.disconnect()
                except AuthKeyUnregisteredError:
                    logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

        finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ ‚è∞
        await log_and_display(
            f"üîö –ö–æ–Ω–µ—Ü –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.\nüïí –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {finish}.\n‚è≥ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {finish - start}", lv, page)
        await show_notification(page, "üîö –ö–æ–Ω–µ—Ü –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        page.go("/bio_editing")  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞ üè†

    async def change_name_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            user_input = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 64 —Å–∏–º–≤–æ–ª–æ–≤: ", multiline=True, max_lines=19)

            async def btn_click(e) -> None:
                await self.change_name_profile(page, user_input.value)
                page.go("/bio_editing")  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
                page.update()

            function_button_ready(page, btn_click, user_input)
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_name_profile(self, page, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param user_input - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            for session_name in find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page, session_name,
                                                                   account_directory=self.directory_path)
                await client.connect()
                try:
                    result = await client(functions.account.UpdateProfileRequest(first_name=user_input))
                    logger.info(f'{result}\n–ò–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!')
                    await client.disconnect()
                except AuthKeyUnregisteredError:
                    logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_last_name_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            user_input = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 64 —Å–∏–º–≤–æ–ª–æ–≤: ", multiline=True,
                                      max_lines=19)

            async def btn_click(e) -> None:
                await self.change_last_name_profile(page, user_input.value)
                page.go("/bio_editing")  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
                page.update()

            function_button_ready(page, btn_click, user_input)
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_last_name_profile(self, page, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param user_input - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            for session_name in find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page, session_name,
                                                                   account_directory=self.directory_path)
                await client.connect()
                try:
                    result = await client(functions.account.UpdateProfileRequest(last_name=user_input))
                    logger.info(f'{result}\n–§–∞–º–∏–ª–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!')
                    await client.disconnect()
                except AuthKeyUnregisteredError:
                    logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_photo_profile(self, page):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            for session_name in find_files(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page, session_name,
                                                                   account_directory=self.directory_path)

                # –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
                try:
                    await client.connect()
                    if not await client.is_connected():
                        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–ª–∏–µ–Ω—Ç—É {session_name}")
                        continue  # –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–µ–∞–Ω—Å—É, –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ

                    for photo_file in find_files(directory_path="user_settings/bio", extension='jpg'):
                        try:
                            file_path = f"user_settings/bio/{photo_file[0]}.jpg"

                            # –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª
                            result = await client(functions.photos.UploadProfilePhotoRequest(
                                file=await client.upload_file(file_path)
                            ))
                            logger.info(f'{result}\n–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!')
                        except Exception as e:
                            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ {photo_file[0]}: {e}")

                except AuthKeyUnregisteredError:
                    logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º, –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")
                except Exception as e:
                    logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è {session_name}: {e}")
                finally:
                    if await client.is_connected():  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ–∞–Ω—Å–∞.
                        await client.disconnect()

        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")
