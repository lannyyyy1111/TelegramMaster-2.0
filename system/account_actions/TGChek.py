import datetime

from loguru import logger

from system.account_actions.TGConnect import TGConnect
from system.auxiliary_functions.auxiliary_functions import find_folders


class TGChek:

    def __init__(self):
        self.TGConnect = TGConnect()

    async def validation_check(self):
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        """
        start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
        logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
        logger.info("‚ñ∂Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞—á–∞–ª–∞—Å—å")

        for folder in find_folders(directory_path="user_settings/accounts"):
            logger.info(f'–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ üìÅ {folder} –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å')
            if folder == "invalid_account":
                logger.info(f"‚õî –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫—É üìÅ: {folder}")
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –ø–∞–ø–∫—É
            elif folder == "banned":
                logger.info(f"‚õî –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫—É üìÅ: {folder}")
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –ø–∞–ø–∫—É
            else:
                logger.info(f"–ü–∞–ø–∫–∞ —Å –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–±–æ—Ç–∞–µ–º: {folder}")
                await self.TGConnect.verify_all_accounts(folder_name=folder)

        logger.info("üîö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
        logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
        logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è

    async def checking_for_spam_bots(self):
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º –±–æ—Ç–æ–≤
        """
        start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
        logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
        logger.info("‚ñ∂Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞—á–∞–ª–∞—Å—å")

        for folder in find_folders(directory_path="user_settings/accounts"):
            logger.info(f'–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ üìÅ {folder} —á–µ—Ä–µ–∑ —Å–ø–∞–º –±–æ—Ç')
            if folder == "invalid_account":
                logger.info(f"‚õî –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫—É üìÅ: {folder}")
                continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª, –ø—Ä–æ–ø—É—Å–∫–∞—è —ç—Ç—É –∏—Ç–µ—Ä–∞—Ü–∏—é
            else:
                await self.TGConnect.check_for_spam(folder_name=folder)

        logger.info("üîö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
        logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
        logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è

    async def renaming_accounts(self):
        """
        –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        """
        start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
        logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
        logger.info("‚ñ∂Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞—á–∞–ª–∞—Å—å")

        for folder in find_folders(directory_path="user_settings/accounts"):
            logger.info(f'–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ üìÅ {folder}')
            if folder == "invalid_account":
                logger.info(f"‚õî –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫—É üìÅ: {folder}")
                continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª, –ø—Ä–æ–ø—É—Å–∫–∞—è —ç—Ç—É –∏—Ç–µ—Ä–∞—Ü–∏—é
            else:
                await self.TGConnect.get_account_details(folder_name=folder)

        logger.info("üîö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
        logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
        logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è

    async def full_verification(self):
        """
        –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        """
        start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
        logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
        logger.info("‚ñ∂Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞—á–∞–ª–∞—Å—å")

        await self.validation_check()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        await self.renaming_accounts()  # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        await self.checking_for_spam_bots()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º –±–æ—Ç–æ–≤

        logger.info("üîö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
        logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
        logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
